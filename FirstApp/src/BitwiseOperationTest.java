
public class BitwiseOperationTest {
	
	public static void main(String[] args) {
		int x = 10;
		int y = 7;
		
		/*
		 * 按位与，需要转换成二进制进行计算，两位均为1才为1，否则为0
		 * 10 0000 1010
		 * 7  0000 0111
		 * ------------
		 * 	  0000 0010
		 */
		int z = x&y;
		System.out.println(z);// 2
		
		/*
		 * 按位或，需要转换成二进制进行计算，两位一个为1就为1
		 * 10 0000 1010
		 * 7  0000 0111
		 * ------------
		 * 	  0000 1111
		 */
		int w = x|y;
		System.out.println(w);// 15
		
		/*
		 * 按位异或，符号相同为假，符号不同为真
		 * 10 0000 1010
		 * 7  0000 0111
		 * ------------
		 * 	  0000 1101
		 */
		int k = x^y;
		System.out.println(k);// 13
		
		/*
		 * 按位取反
		 * 二进制最高位是符号位，1为负号，0为正号
		 * 负数补码 = 反码+1
		 * 反码 = 除了符号位之外，各位取反
		 * 10 0000 1010
		 * ------------
		 * 	  1111 0101
		 *	  1000 1010  反码
		 *    1000 1011 补码
		 */
		int a = ~x;
		System.out.println(a);// -11
		
		/*
		 * 右移，数除2次
		 * 10 0000 1010
		 * 	  0000 0010  右移两位，左边补零 
		 */
		int b = x>>2;
		System.out.println(b);// 2
		
		/*
		 * 右移，数乘两次2
		 * 10 0000 1010
		 * 	  0010 1000  左移两位，右边边补零 
		 */
		int c = x<<2;
		System.out.println(c);// 40
	}
}
